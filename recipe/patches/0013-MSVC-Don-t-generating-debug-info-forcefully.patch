From e074d337d81f8cebc9b30731bdf312daa48b2c11 Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Sat, 26 Sep 2020 19:25:32 -0400
Subject: [PATCH 13/14] MSVC: Don't generating debug info forcefully

---
 SConstruct                              | 26 ++++++++++++-------------
 site_scons/site_tools/separate_debug.py |  6 +++---
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/SConstruct b/SConstruct
index d8d8e82ee6..7b00a94839 100644
--- a/SConstruct
+++ b/SConstruct
@@ -1901,11 +1901,11 @@ elif env.TargetOSIs('windows'):
     # Don't send error reports in case of internal compiler error
     env.Append( CCFLAGS= ["/errorReport:none"] )
 
-    # Select debugging format. /Zi gives faster links but seem to use more memory
-    if get_option('msvc-debugging-format') == "codeview":
-        env['CCPDBFLAGS'] = "/Z7"
-    elif get_option('msvc-debugging-format') == "pdb":
-        env['CCPDBFLAGS'] = '/Zi /Fd${TARGET}.pdb'
+    # # Select debugging format. /Zi gives faster links but seem to use more memory
+    # if get_option('msvc-debugging-format') == "codeview":
+    #     env['CCPDBFLAGS'] = "/Z7"
+    # elif get_option('msvc-debugging-format') == "pdb":
+    #     env['CCPDBFLAGS'] = '/Zi /Fd${TARGET}.pdb'
 
 
     # The SCons built-in pdbGenerator always adds /DEBUG, but we would like
@@ -1925,11 +1925,11 @@ elif env.TargetOSIs('windows'):
     #
     # Please also note that this has nothing to do with _DEBUG or optimization.
 
-    # If the user set a /DEBUG flag explicitly, don't add
-    # another. Otherwise use the standard /DEBUG flag, since we always
-    # want PDBs.
-    if not any(flag.startswith('/DEBUG') for flag in env['LINKFLAGS']):
-        env.Append(LINKFLAGS=["/DEBUG"])
+    # # If the user set a /DEBUG flag explicitly, don't add
+    # # another. Otherwise use the standard /DEBUG flag, since we always
+    # # want PDBs.
+    # if not any(flag.startswith('/DEBUG') for flag in env['LINKFLAGS']):
+    #     env.Append(LINKFLAGS=["/DEBUG"])
 
     # /MD:  use the multithreaded, DLL version of the run-time library (MSVCRT.lib/MSVCR###.DLL)
     # /MDd: Defines _DEBUG, _MT, _DLL, and uses MSVCRTD.lib/MSVCRD###.DLL
@@ -2000,9 +2000,9 @@ elif env.TargetOSIs('windows'):
         ],
     )
 
-# When building on visual studio, this sets the name of the debug symbols file
-if env.ToolchainIs('msvc'):
-    env['PDB'] = '${TARGET.base}.pdb'
+# # When building on visual studio, this sets the name of the debug symbols file
+# if env.ToolchainIs('msvc'):
+#     env['PDB'] = '${TARGET.base}.pdb'
 
 # Python uses APPDATA to determine the location of user installed
 # site-packages. If we do not pass this variable down to Python
diff --git a/site_scons/site_tools/separate_debug.py b/site_scons/site_tools/separate_debug.py
index 6ca510b039..aad3c39a9e 100644
--- a/site_scons/site_tools/separate_debug.py
+++ b/site_scons/site_tools/separate_debug.py
@@ -114,9 +114,9 @@ def _update_builder(env, builder):
         elif env.TargetOSIs("posix"):
             debug_file = env.File(str(target[0]) + ".debug")
             debug_files.append(debug_file)
-        elif env.TargetOSIs("windows"):
-            debug_file = env.File(env.subst("${PDB}", target=target))
-            debug_files.append(debug_file)
+        # elif env.TargetOSIs("windows"):
+        #     debug_file = env.File(env.subst("${PDB}", target=target))
+        #     debug_files.append(debug_file)
         else:
             pass
 
-- 
2.17.1

